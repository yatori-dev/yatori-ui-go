// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

export class AddXueXiTongDto {
    /**
     * Creates a new AddXueXiTongDto instance.
     * @param {Partial<AddXueXiTongDto>} [$$source = {}] - The source object to create the AddXueXiTongDto.
     */
    constructor($$source = {}) {
        if (!("id" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["id"] = 0;
        }
        if (!("username" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["username"] = "";
        }
        if (!("password" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["password"] = "";
        }
        if (!("courseId" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["courseId"] = "";
        }
        if (!("courseName" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["courseName"] = "";
        }
        if (!("status" in $$source)) {
            /**
             * 0 未开始 1 队列中 2 进行中 3 已完成 4 已失败 5 已暂停
             * @member
             * @type {number}
             */
            this["status"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new AddXueXiTongDto instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {AddXueXiTongDto}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new AddXueXiTongDto(/** @type {Partial<AddXueXiTongDto>} */($$parsedSource));
    }
}

export class ListXueXiTongDto {
    /**
     * Creates a new ListXueXiTongDto instance.
     * @param {Partial<ListXueXiTongDto>} [$$source = {}] - The source object to create the ListXueXiTongDto.
     */
    constructor($$source = {}) {
        if (!("id" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["id"] = 0;
        }
        if (!("username" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["username"] = "";
        }
        if (!("password" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["password"] = "";
        }
        if (!("courseId" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["courseId"] = "";
        }
        if (!("courseName" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["courseName"] = "";
        }
        if (!("status" in $$source)) {
            /**
             * 0 未开始 1 队列中 2 进行中 3 已完成 4 已失败 5 已暂停
             * @member
             * @type {number}
             */
            this["status"] = 0;
        }
        if (!("Page" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["Page"] = 0;
        }
        if (!("Size" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["Size"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ListXueXiTongDto instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {ListXueXiTongDto}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new ListXueXiTongDto(/** @type {Partial<ListXueXiTongDto>} */($$parsedSource));
    }
}

export class Result {
    /**
     * Creates a new Result instance.
     * @param {Partial<Result>} [$$source = {}] - The source object to create the Result.
     */
    constructor($$source = {}) {
        if (!("code" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["code"] = 0;
        }
        if (!("message" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["message"] = "";
        }
        if (!("data" in $$source)) {
            /**
             * @member
             * @type {any}
             */
            this["data"] = null;
        }
        if (!("total" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["total"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Result instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Result}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Result(/** @type {Partial<Result>} */($$parsedSource));
    }
}
