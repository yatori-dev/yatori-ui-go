// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as model$0 from "../model/models.js";

/**
 * Add 添加任务
 * @param {model$0.AddXueXiTongDto | null} dto
 * @returns {Promise<void> & { cancel(): void }}
 */
export function Add(dto) {
    let $resultPromise = /** @type {any} */($Call.ByID(1829331671, dto));
    return $resultPromise;
}

/**
 * Delete 删除任务
 * @param {number} id
 * @returns {Promise<void> & { cancel(): void }}
 */
export function Delete(id) {
    let $resultPromise = /** @type {any} */($Call.ByID(292270823, id));
    return $resultPromise;
}

/**
 * List 分页获取任务列表
 * @param {model$0.ListXueXiTongDto | null} dto
 * @returns {Promise<model$0.Result | null> & { cancel(): void }}
 */
export function List(dto) {
    let $resultPromise = /** @type {any} */($Call.ByID(759647028, dto));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType1($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * Pause 暂停任务
 * @param {number} id
 * @returns {Promise<void> & { cancel(): void }}
 */
export function Pause(id) {
    let $resultPromise = /** @type {any} */($Call.ByID(217584006, id));
    return $resultPromise;
}

/**
 * QueryCourse 查询课程
 * @param {model$0.AddXueXiTongDto | null} dto
 * @returns {Promise<model$0.Result | null> & { cancel(): void }}
 */
export function QueryCourse(dto) {
    let $resultPromise = /** @type {any} */($Call.ByID(4119812221, dto));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType1($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

// Private type creation functions
const $$createType0 = model$0.Result.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
